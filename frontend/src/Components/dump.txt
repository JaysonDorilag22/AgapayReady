import React, { useEffect, useRef } from 'react';
import mapboxgl from 'mapbox-gl';
import MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';
import MapboxDirections from '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions';
import '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';
import '@mapbox/mapbox-gl-directions/dist/mapbox-gl-directions.css';
// import '@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css';
import LocSVG from '../assets/services/location.png';

export default function Mapping() {
  const mapContainer = useRef(null);
  const markerRef = useRef(null);

  useEffect(() => {
    mapboxgl.accessToken = import.meta.env.VITE_MAPBOX_API_KEY;

    // Coordinates for the desired location (center)
    const centerCoordinates = [121.03536967321583, 14.509284182080165];
    const zoomLevel = 15; // Adjust zoom level as needed

    const map = new mapboxgl.Map({
      container: mapContainer.current,
      style: 'mapbox://styles/mapbox/standard',
      center: centerCoordinates,
      zoom: zoomLevel,
      pitch: 45, // Tilt the map to a 45 degree angle to enable 3D view
      bearing: -17.6, // Adjust bearing to give a 3D effect
    });

    map.on('load', () => {
      // Add a default marker symbol to represent the location
      map.addLayer({
        id: 'location-marker',
        type: 'symbol',
        source: {
          type: 'geojson',
          data: {
            type: 'FeatureCollection',
            features: [
              {
                type: 'Feature',
                geometry: {
                  type: 'Point',
                  coordinates: centerCoordinates,
                },
              },
            ],
          },
        },
        layout: {
          'icon-image': 'circle-stroked-15', // Using a built-in marker symbol
          'icon-size': 1.5, // Adjust the size as needed
        },
      });
    });

    // Add a 3D building layer
    map.on('load', () => {
      map.addLayer({
        'id': '3d-buildings',
        'source': 'composite',
        'source-layer': 'building',
        'filter': ['==', 'extrude', 'true'],
        'type': 'fill-extrusion',
        'minzoom': 15,
        'paint': {
          'fill-extrusion-color': '#aaa',
          'fill-extrusion-height': ['get', 'height'],
          'fill-extrusion-base': ['get', 'min_height'],
          'fill-extrusion-opacity': 0.6,
        },
      });
      
      const marker = new mapboxgl.Marker()
        .setLngLat(centerCoordinates)
        .addTo(map);

      markerRef.current = marker;
    });

    const directions = new MapboxDirections({
      accessToken: mapboxgl.accessToken
    });

    map.addControl(
      directions,
      'top-left'
    );

    // Create and add the geocoder to the map
    const geocoder = new MapboxGeocoder({
      accessToken: mapboxgl.accessToken,
      mapboxgl: mapboxgl,
      placeholder: 'Search for a location',
    });

    map.addControl(geocoder);

    geocoder.on('result', (e) => {
      const coordinates = e.result.center;
      console.log('Search Result Coordinates:', coordinates);
      // Update marker position
      markerRef.current.setLngLat(coordinates);
      // You can do whatever you want with the coordinates here
    });

    // Add a click event listener to the map
    // map.on('click', (e) => {
    //   const coordinates = e.lngLat.toArray();
    //   console.log('Clicked Coordinates:', coordinates);
    //   alert(`Clicked Coordinates: ${coordinates[1]}, ${coordinates[0]}`); // Alert with coordinates
    // });

    // map.on('load', () => {
    //   map.loadImage(
    //     LocSVG,
    //     (error, image) => {
    //       if (error) throw error;

    //       // Add the image to the map style.
    //       map.addImage('cat', image);

    //       // Add a data source containing one point feature.
    //       map.addSource('point', {
    //         type: 'geojson',
    //         data: {
    //           type: 'FeatureCollection',
    //           features: [
    //             {
    //               type: 'Feature',
    //               geometry: {
    //                 type: 'Point',
    //                 coordinates: centerCoordinates,
    //               },
    //             },
    //           ],
    //         },
    //       });

    //       map.addLayer({
    //         id: 'points',
    //         type: 'symbol',
    //         source: 'point', // reference the data source
    //         layout: {
    //           'icon-image': 'cat', // reference the image
    //           'icon-size': 0.25,
    //           'icon-anchor': 'bottom', // adjust anchor point
    //         },
    //       });
    //     }
    //   );
    // });

    

    return () => map.remove();
  }, []);

  return (
    <div>
      <div ref={mapContainer} style={{ width: '100%', height: '500px', position: 'relative' }}></div>
    </div>
  );
}
